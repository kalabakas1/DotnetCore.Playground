// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Playground.Data;

namespace Playground.Data.Migrations
{
    [DbContext(typeof(HealthCheckConfigurationContext))]
    [Migration("20191206100745_HealthChecksUpdate")]
    partial class HealthChecksUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Playground.Domain.Models.HealthChecks.HealthCheckAbstract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("HealthCheckConfigurationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HealthCheckConfigurationId");

                    b.ToTable("HealtCheck");

                    b.HasDiscriminator<string>("Discriminator").HasValue("HealthCheckAbstract");
                });

            modelBuilder.Entity("Playground.Domain.Models.HealthChecks.HealthCheckConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Retries")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SleepInMillsBetweenRetry")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HealthCheckConfiguration");
                });

            modelBuilder.Entity("Playground.Domain.Models.HealthChecks.UrlPingHealthCheck", b =>
                {
                    b.HasBaseType("Playground.Domain.Models.HealthChecks.HealthCheckAbstract");

                    b.Property<string>("Headers")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidResponses")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("UrlPingHealthCheck");
                });

            modelBuilder.Entity("Playground.Domain.Models.HealthChecks.HealthCheckAbstract", b =>
                {
                    b.HasOne("Playground.Domain.Models.HealthChecks.HealthCheckConfiguration", null)
                        .WithMany("HealthChecks")
                        .HasForeignKey("HealthCheckConfigurationId");
                });
#pragma warning restore 612, 618
        }
    }
}
